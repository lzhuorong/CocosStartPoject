{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","gainScore","spawnNewStar","destroy","start","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AAFJ,KAHP;;AAQL;;AAEAC,UAVK,oBAUK;AACN;AACH,KAZI;;;AAcLC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,eAAOJ,IAAP;AACH,KApBI;;AAsBLK,cAAU,oBAAY;AAClB;AACA,aAAKR,IAAL,CAAUS,SAAV;AACA,aAAKT,IAAL,CAAUU,YAAV;AACA;AACA,aAAKN,IAAL,CAAUO,OAAV;AACH,KA5BI;;AA8BLC,SA9BK,mBA8BI,CAER,CAhCI;AAkCLC,UAlCK,kBAkCGC,EAlCH,EAkCO;AACR;AACA,YAAI,KAAKhB,iBAAL,KAA2B,KAAKF,UAApC,EAAgD;AAC5C,iBAAKY,QAAL;AACA;AACH;AACJ;AAxCI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n        pickRadius: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        // \r\n    },\r\n\r\n    getPlayerDistance: function () {\r\n        // 获取 player 节点位置\r\n        var playerPos = this.game.player.getPosition();\r\n        // 计算 player 与 star 之间的距离\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function () {\r\n        // 星星被收集，得分并调用 Game.js 生成一个新的星星\r\n        this.game.gainScore();\r\n        this.game.spawnNewStar();\r\n        // 销毁当前星星节点\r\n        this.node.destroy();\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        // 主角与星星之间的距离可以收集时，调用收集函数\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            this.onPicked();\r\n            return;\r\n        }\r\n    },\r\n});\r\n"]}